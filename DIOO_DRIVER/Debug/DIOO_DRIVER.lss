
DIOO_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000552  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000005e8  00000000  00000000  000005a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000003d0  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 a0 02 	call	0x540	; 0x540 <main>
  64:	0c 94 a7 02 	jmp	0x54e	; 0x54e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vidSetPortDir>:
#include "DIO.h"
#include "../Functions.h"


void DIO_vidSetPortDir(u8 u8PortName, u8 u8PortDir)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_vidSetPortDir+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_vidSetPortDir+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8PortName)
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	28 2f       	mov	r18, r24
  80:	30 e0       	ldi	r19, 0x00	; 0
  82:	3c 83       	std	Y+4, r19	; 0x04
  84:	2b 83       	std	Y+3, r18	; 0x03
  86:	8b 81       	ldd	r24, Y+3	; 0x03
  88:	9c 81       	ldd	r25, Y+4	; 0x04
  8a:	82 30       	cpi	r24, 0x02	; 2
  8c:	91 05       	cpc	r25, r1
  8e:	d9 f0       	breq	.+54     	; 0xc6 <DIO_vidSetPortDir+0x5a>
  90:	2b 81       	ldd	r18, Y+3	; 0x03
  92:	3c 81       	ldd	r19, Y+4	; 0x04
  94:	23 30       	cpi	r18, 0x03	; 3
  96:	31 05       	cpc	r19, r1
  98:	34 f4       	brge	.+12     	; 0xa6 <DIO_vidSetPortDir+0x3a>
  9a:	8b 81       	ldd	r24, Y+3	; 0x03
  9c:	9c 81       	ldd	r25, Y+4	; 0x04
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	91 05       	cpc	r25, r1
  a2:	61 f0       	breq	.+24     	; 0xbc <DIO_vidSetPortDir+0x50>
  a4:	1e c0       	rjmp	.+60     	; 0xe2 <DIO_vidSetPortDir+0x76>
  a6:	2b 81       	ldd	r18, Y+3	; 0x03
  a8:	3c 81       	ldd	r19, Y+4	; 0x04
  aa:	23 30       	cpi	r18, 0x03	; 3
  ac:	31 05       	cpc	r19, r1
  ae:	81 f0       	breq	.+32     	; 0xd0 <DIO_vidSetPortDir+0x64>
  b0:	8b 81       	ldd	r24, Y+3	; 0x03
  b2:	9c 81       	ldd	r25, Y+4	; 0x04
  b4:	84 30       	cpi	r24, 0x04	; 4
  b6:	91 05       	cpc	r25, r1
  b8:	81 f0       	breq	.+32     	; 0xda <DIO_vidSetPortDir+0x6e>
  ba:	13 c0       	rjmp	.+38     	; 0xe2 <DIO_vidSetPortDir+0x76>
	{
	  case PORTA:
	  {
		  DDRA_Register = u8PortDir ;
  bc:	ea e3       	ldi	r30, 0x3A	; 58
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	8a 81       	ldd	r24, Y+2	; 0x02
  c2:	80 83       	st	Z, r24
  c4:	0e c0       	rjmp	.+28     	; 0xe2 <DIO_vidSetPortDir+0x76>

	  }break ;
	  case PORTB:
	  {
		  DDRA_Register = u8PortDir ;
  c6:	ea e3       	ldi	r30, 0x3A	; 58
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	8a 81       	ldd	r24, Y+2	; 0x02
  cc:	80 83       	st	Z, r24
  ce:	09 c0       	rjmp	.+18     	; 0xe2 <DIO_vidSetPortDir+0x76>

	  }break ;
	  case PORTC:
	  {
		  DDRA_Register = u8PortDir ;
  d0:	ea e3       	ldi	r30, 0x3A	; 58
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	8a 81       	ldd	r24, Y+2	; 0x02
  d6:	80 83       	st	Z, r24
  d8:	04 c0       	rjmp	.+8      	; 0xe2 <DIO_vidSetPortDir+0x76>

	  }break ;
	  case PORTD:
	  {
		  DDRA_Register = u8PortDir ;
  da:	ea e3       	ldi	r30, 0x3A	; 58
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	8a 81       	ldd	r24, Y+2	; 0x02
  e0:	80 83       	st	Z, r24

	  }
	  break ;
	}

}
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	cf 91       	pop	r28
  ec:	df 91       	pop	r29
  ee:	08 95       	ret

000000f0 <DIO_vidSetPinDir>:

void DIO_vidSetPinDir(u8 u8PortName, u8 u8PinNo, u8 u8PinDir)
{
  f0:	df 93       	push	r29
  f2:	cf 93       	push	r28
  f4:	00 d0       	rcall	.+0      	; 0xf6 <DIO_vidSetPinDir+0x6>
  f6:	00 d0       	rcall	.+0      	; 0xf8 <DIO_vidSetPinDir+0x8>
  f8:	0f 92       	push	r0
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	89 83       	std	Y+1, r24	; 0x01
 100:	6a 83       	std	Y+2, r22	; 0x02
 102:	4b 83       	std	Y+3, r20	; 0x03
	switch(u8PortName)
 104:	89 81       	ldd	r24, Y+1	; 0x01
 106:	28 2f       	mov	r18, r24
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	3d 83       	std	Y+5, r19	; 0x05
 10c:	2c 83       	std	Y+4, r18	; 0x04
 10e:	8c 81       	ldd	r24, Y+4	; 0x04
 110:	9d 81       	ldd	r25, Y+5	; 0x05
 112:	82 30       	cpi	r24, 0x02	; 2
 114:	91 05       	cpc	r25, r1
 116:	09 f4       	brne	.+2      	; 0x11a <DIO_vidSetPinDir+0x2a>
 118:	48 c0       	rjmp	.+144    	; 0x1aa <DIO_vidSetPinDir+0xba>
 11a:	2c 81       	ldd	r18, Y+4	; 0x04
 11c:	3d 81       	ldd	r19, Y+5	; 0x05
 11e:	23 30       	cpi	r18, 0x03	; 3
 120:	31 05       	cpc	r19, r1
 122:	34 f4       	brge	.+12     	; 0x130 <DIO_vidSetPinDir+0x40>
 124:	8c 81       	ldd	r24, Y+4	; 0x04
 126:	9d 81       	ldd	r25, Y+5	; 0x05
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	91 05       	cpc	r25, r1
 12c:	71 f0       	breq	.+28     	; 0x14a <DIO_vidSetPinDir+0x5a>
 12e:	cb c0       	rjmp	.+406    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
 130:	2c 81       	ldd	r18, Y+4	; 0x04
 132:	3d 81       	ldd	r19, Y+5	; 0x05
 134:	23 30       	cpi	r18, 0x03	; 3
 136:	31 05       	cpc	r19, r1
 138:	09 f4       	brne	.+2      	; 0x13c <DIO_vidSetPinDir+0x4c>
 13a:	67 c0       	rjmp	.+206    	; 0x20a <DIO_vidSetPinDir+0x11a>
 13c:	8c 81       	ldd	r24, Y+4	; 0x04
 13e:	9d 81       	ldd	r25, Y+5	; 0x05
 140:	84 30       	cpi	r24, 0x04	; 4
 142:	91 05       	cpc	r25, r1
 144:	09 f4       	brne	.+2      	; 0x148 <DIO_vidSetPinDir+0x58>
 146:	91 c0       	rjmp	.+290    	; 0x26a <DIO_vidSetPinDir+0x17a>
 148:	be c0       	rjmp	.+380    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
	{
	  case PORTA :
	  {
		if(u8PinDir == PORTDIR_INPUT)
 14a:	8b 81       	ldd	r24, Y+3	; 0x03
 14c:	88 23       	and	r24, r24
 14e:	a9 f4       	brne	.+42     	; 0x17a <DIO_vidSetPinDir+0x8a>
		{
		  clr_bit(DDRA_Register,u8PinNo);
 150:	aa e3       	ldi	r26, 0x3A	; 58
 152:	b0 e0       	ldi	r27, 0x00	; 0
 154:	ea e3       	ldi	r30, 0x3A	; 58
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	80 81       	ld	r24, Z
 15a:	48 2f       	mov	r20, r24
 15c:	8a 81       	ldd	r24, Y+2	; 0x02
 15e:	28 2f       	mov	r18, r24
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 2e       	mov	r0, r18
 168:	02 c0       	rjmp	.+4      	; 0x16e <DIO_vidSetPinDir+0x7e>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	0a 94       	dec	r0
 170:	e2 f7       	brpl	.-8      	; 0x16a <DIO_vidSetPinDir+0x7a>
 172:	80 95       	com	r24
 174:	84 23       	and	r24, r20
 176:	8c 93       	st	X, r24
 178:	a6 c0       	rjmp	.+332    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		}

		else if (u8PinDir == PORTDIR_OUTPUT)
 17a:	8b 81       	ldd	r24, Y+3	; 0x03
 17c:	8f 3f       	cpi	r24, 0xFF	; 255
 17e:	09 f0       	breq	.+2      	; 0x182 <DIO_vidSetPinDir+0x92>
 180:	a2 c0       	rjmp	.+324    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		{
			set_bit(DDRA_Register, u8PinNo)	;
 182:	aa e3       	ldi	r26, 0x3A	; 58
 184:	b0 e0       	ldi	r27, 0x00	; 0
 186:	ea e3       	ldi	r30, 0x3A	; 58
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	48 2f       	mov	r20, r24
 18e:	8a 81       	ldd	r24, Y+2	; 0x02
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 2e       	mov	r0, r18
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_vidSetPinDir+0xb0>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	0a 94       	dec	r0
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_vidSetPinDir+0xac>
 1a4:	84 2b       	or	r24, r20
 1a6:	8c 93       	st	X, r24
 1a8:	8e c0       	rjmp	.+284    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>

	  } break;

	  case PORTB :
	  {
		if(u8PinDir == PORTDIR_INPUT)
 1aa:	8b 81       	ldd	r24, Y+3	; 0x03
 1ac:	88 23       	and	r24, r24
 1ae:	a9 f4       	brne	.+42     	; 0x1da <DIO_vidSetPinDir+0xea>
		{
		  clr_bit(DDRB_Register,u8PinNo);
 1b0:	a7 e3       	ldi	r26, 0x37	; 55
 1b2:	b0 e0       	ldi	r27, 0x00	; 0
 1b4:	e7 e3       	ldi	r30, 0x37	; 55
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	48 2f       	mov	r20, r24
 1bc:	8a 81       	ldd	r24, Y+2	; 0x02
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 2e       	mov	r0, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_vidSetPinDir+0xde>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	0a 94       	dec	r0
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_vidSetPinDir+0xda>
 1d2:	80 95       	com	r24
 1d4:	84 23       	and	r24, r20
 1d6:	8c 93       	st	X, r24
 1d8:	76 c0       	rjmp	.+236    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		}

		else if (u8PinDir == PORTDIR_OUTPUT)
 1da:	8b 81       	ldd	r24, Y+3	; 0x03
 1dc:	8f 3f       	cpi	r24, 0xFF	; 255
 1de:	09 f0       	breq	.+2      	; 0x1e2 <DIO_vidSetPinDir+0xf2>
 1e0:	72 c0       	rjmp	.+228    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		{
			set_bit(DDRB_Register, u8PinNo)	;
 1e2:	a7 e3       	ldi	r26, 0x37	; 55
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	e7 e3       	ldi	r30, 0x37	; 55
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	48 2f       	mov	r20, r24
 1ee:	8a 81       	ldd	r24, Y+2	; 0x02
 1f0:	28 2f       	mov	r18, r24
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 2e       	mov	r0, r18
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_vidSetPinDir+0x110>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	0a 94       	dec	r0
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_vidSetPinDir+0x10c>
 204:	84 2b       	or	r24, r20
 206:	8c 93       	st	X, r24
 208:	5e c0       	rjmp	.+188    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>

	  } break;

	  case PORTC :
	  {
		if(u8PinDir == PORTDIR_INPUT)
 20a:	8b 81       	ldd	r24, Y+3	; 0x03
 20c:	88 23       	and	r24, r24
 20e:	a9 f4       	brne	.+42     	; 0x23a <DIO_vidSetPinDir+0x14a>
		{
		  clr_bit(DDRC_Register,u8PinNo);
 210:	a4 e3       	ldi	r26, 0x34	; 52
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	e4 e3       	ldi	r30, 0x34	; 52
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	48 2f       	mov	r20, r24
 21c:	8a 81       	ldd	r24, Y+2	; 0x02
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 2e       	mov	r0, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_vidSetPinDir+0x13e>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_vidSetPinDir+0x13a>
 232:	80 95       	com	r24
 234:	84 23       	and	r24, r20
 236:	8c 93       	st	X, r24
 238:	46 c0       	rjmp	.+140    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		}

		else if (u8PinDir == PORTDIR_OUTPUT)
 23a:	8b 81       	ldd	r24, Y+3	; 0x03
 23c:	8f 3f       	cpi	r24, 0xFF	; 255
 23e:	09 f0       	breq	.+2      	; 0x242 <DIO_vidSetPinDir+0x152>
 240:	42 c0       	rjmp	.+132    	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		{
			set_bit(DDRC_Register, u8PinNo)	;
 242:	a4 e3       	ldi	r26, 0x34	; 52
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e4 e3       	ldi	r30, 0x34	; 52
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	8a 81       	ldd	r24, Y+2	; 0x02
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_vidSetPinDir+0x170>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_vidSetPinDir+0x16c>
 264:	84 2b       	or	r24, r20
 266:	8c 93       	st	X, r24
 268:	2e c0       	rjmp	.+92     	; 0x2c6 <DIO_vidSetPinDir+0x1d6>

	  } break;

	  case PORTD :
	  {
		if(u8PinDir == PORTDIR_INPUT)
 26a:	8b 81       	ldd	r24, Y+3	; 0x03
 26c:	88 23       	and	r24, r24
 26e:	a9 f4       	brne	.+42     	; 0x29a <DIO_vidSetPinDir+0x1aa>
		{
		  clr_bit(DDRD_Register,u8PinNo);
 270:	a1 e3       	ldi	r26, 0x31	; 49
 272:	b0 e0       	ldi	r27, 0x00	; 0
 274:	e1 e3       	ldi	r30, 0x31	; 49
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	48 2f       	mov	r20, r24
 27c:	8a 81       	ldd	r24, Y+2	; 0x02
 27e:	28 2f       	mov	r18, r24
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	02 2e       	mov	r0, r18
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_vidSetPinDir+0x19e>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	0a 94       	dec	r0
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_vidSetPinDir+0x19a>
 292:	80 95       	com	r24
 294:	84 23       	and	r24, r20
 296:	8c 93       	st	X, r24
 298:	16 c0       	rjmp	.+44     	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		}

		else if (u8PinDir == PORTDIR_OUTPUT)
 29a:	8b 81       	ldd	r24, Y+3	; 0x03
 29c:	8f 3f       	cpi	r24, 0xFF	; 255
 29e:	99 f4       	brne	.+38     	; 0x2c6 <DIO_vidSetPinDir+0x1d6>
		{
			set_bit(DDRD_Register, u8PinNo)	;
 2a0:	a1 e3       	ldi	r26, 0x31	; 49
 2a2:	b0 e0       	ldi	r27, 0x00	; 0
 2a4:	e1 e3       	ldi	r30, 0x31	; 49
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	48 2f       	mov	r20, r24
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	28 2f       	mov	r18, r24
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 2e       	mov	r0, r18
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_vidSetPinDir+0x1ce>
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	0a 94       	dec	r0
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_vidSetPinDir+0x1ca>
 2c2:	84 2b       	or	r24, r20
 2c4:	8c 93       	st	X, r24
		}

	  } break;

	}
}
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
 2ca:	0f 90       	pop	r0
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
 2d0:	cf 91       	pop	r28
 2d2:	df 91       	pop	r29
 2d4:	08 95       	ret

000002d6 <DIO_vidSetPinval>:

void DIO_vidSetPinval(u8 u8portName, u8 u8pinNo, u8 u8pinVal)
{
 2d6:	df 93       	push	r29
 2d8:	cf 93       	push	r28
 2da:	00 d0       	rcall	.+0      	; 0x2dc <DIO_vidSetPinval+0x6>
 2dc:	00 d0       	rcall	.+0      	; 0x2de <DIO_vidSetPinval+0x8>
 2de:	0f 92       	push	r0
 2e0:	cd b7       	in	r28, 0x3d	; 61
 2e2:	de b7       	in	r29, 0x3e	; 62
 2e4:	89 83       	std	Y+1, r24	; 0x01
 2e6:	6a 83       	std	Y+2, r22	; 0x02
 2e8:	4b 83       	std	Y+3, r20	; 0x03
	switch(u8portName)
 2ea:	89 81       	ldd	r24, Y+1	; 0x01
 2ec:	28 2f       	mov	r18, r24
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	3d 83       	std	Y+5, r19	; 0x05
 2f2:	2c 83       	std	Y+4, r18	; 0x04
 2f4:	8c 81       	ldd	r24, Y+4	; 0x04
 2f6:	9d 81       	ldd	r25, Y+5	; 0x05
 2f8:	82 30       	cpi	r24, 0x02	; 2
 2fa:	91 05       	cpc	r25, r1
 2fc:	09 f4       	brne	.+2      	; 0x300 <DIO_vidSetPinval+0x2a>
 2fe:	48 c0       	rjmp	.+144    	; 0x390 <DIO_vidSetPinval+0xba>
 300:	2c 81       	ldd	r18, Y+4	; 0x04
 302:	3d 81       	ldd	r19, Y+5	; 0x05
 304:	23 30       	cpi	r18, 0x03	; 3
 306:	31 05       	cpc	r19, r1
 308:	34 f4       	brge	.+12     	; 0x316 <DIO_vidSetPinval+0x40>
 30a:	8c 81       	ldd	r24, Y+4	; 0x04
 30c:	9d 81       	ldd	r25, Y+5	; 0x05
 30e:	81 30       	cpi	r24, 0x01	; 1
 310:	91 05       	cpc	r25, r1
 312:	71 f0       	breq	.+28     	; 0x330 <DIO_vidSetPinval+0x5a>
 314:	cb c0       	rjmp	.+406    	; 0x4ac <__stack+0x4d>
 316:	2c 81       	ldd	r18, Y+4	; 0x04
 318:	3d 81       	ldd	r19, Y+5	; 0x05
 31a:	23 30       	cpi	r18, 0x03	; 3
 31c:	31 05       	cpc	r19, r1
 31e:	09 f4       	brne	.+2      	; 0x322 <DIO_vidSetPinval+0x4c>
 320:	67 c0       	rjmp	.+206    	; 0x3f0 <DIO_vidSetPinval+0x11a>
 322:	8c 81       	ldd	r24, Y+4	; 0x04
 324:	9d 81       	ldd	r25, Y+5	; 0x05
 326:	84 30       	cpi	r24, 0x04	; 4
 328:	91 05       	cpc	r25, r1
 32a:	09 f4       	brne	.+2      	; 0x32e <DIO_vidSetPinval+0x58>
 32c:	91 c0       	rjmp	.+290    	; 0x450 <DIO_vidSetPinval+0x17a>
 32e:	be c0       	rjmp	.+380    	; 0x4ac <__stack+0x4d>
	{
	case PORTA:
	{
		if(u8pinVal == HIGH)
 330:	8b 81       	ldd	r24, Y+3	; 0x03
 332:	81 30       	cpi	r24, 0x01	; 1
 334:	a1 f4       	brne	.+40     	; 0x35e <DIO_vidSetPinval+0x88>
		{
			set_bit(PORTA_Register, u8pinNo);
 336:	ab e3       	ldi	r26, 0x3B	; 59
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	eb e3       	ldi	r30, 0x3B	; 59
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	80 81       	ld	r24, Z
 340:	48 2f       	mov	r20, r24
 342:	8a 81       	ldd	r24, Y+2	; 0x02
 344:	28 2f       	mov	r18, r24
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	02 2e       	mov	r0, r18
 34e:	02 c0       	rjmp	.+4      	; 0x354 <DIO_vidSetPinval+0x7e>
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	0a 94       	dec	r0
 356:	e2 f7       	brpl	.-8      	; 0x350 <DIO_vidSetPinval+0x7a>
 358:	84 2b       	or	r24, r20
 35a:	8c 93       	st	X, r24
 35c:	a7 c0       	rjmp	.+334    	; 0x4ac <__stack+0x4d>
		}

		else if (u8pinVal == LOW)
 35e:	8b 81       	ldd	r24, Y+3	; 0x03
 360:	88 23       	and	r24, r24
 362:	09 f0       	breq	.+2      	; 0x366 <DIO_vidSetPinval+0x90>
 364:	a3 c0       	rjmp	.+326    	; 0x4ac <__stack+0x4d>
		{
			clr_bit(PORTA_Register, u8pinNo);
 366:	ab e3       	ldi	r26, 0x3B	; 59
 368:	b0 e0       	ldi	r27, 0x00	; 0
 36a:	eb e3       	ldi	r30, 0x3B	; 59
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	80 81       	ld	r24, Z
 370:	48 2f       	mov	r20, r24
 372:	8a 81       	ldd	r24, Y+2	; 0x02
 374:	28 2f       	mov	r18, r24
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	02 2e       	mov	r0, r18
 37e:	02 c0       	rjmp	.+4      	; 0x384 <DIO_vidSetPinval+0xae>
 380:	88 0f       	add	r24, r24
 382:	99 1f       	adc	r25, r25
 384:	0a 94       	dec	r0
 386:	e2 f7       	brpl	.-8      	; 0x380 <DIO_vidSetPinval+0xaa>
 388:	80 95       	com	r24
 38a:	84 23       	and	r24, r20
 38c:	8c 93       	st	X, r24
 38e:	8e c0       	rjmp	.+284    	; 0x4ac <__stack+0x4d>
		}
	}break;

	case PORTB:
	{
		if(u8pinVal == HIGH)
 390:	8b 81       	ldd	r24, Y+3	; 0x03
 392:	81 30       	cpi	r24, 0x01	; 1
 394:	a1 f4       	brne	.+40     	; 0x3be <DIO_vidSetPinval+0xe8>
		{
			set_bit(PORTB_Register, u8pinNo);
 396:	a8 e3       	ldi	r26, 0x38	; 56
 398:	b0 e0       	ldi	r27, 0x00	; 0
 39a:	e8 e3       	ldi	r30, 0x38	; 56
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	80 81       	ld	r24, Z
 3a0:	48 2f       	mov	r20, r24
 3a2:	8a 81       	ldd	r24, Y+2	; 0x02
 3a4:	28 2f       	mov	r18, r24
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	02 2e       	mov	r0, r18
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_vidSetPinval+0xde>
 3b0:	88 0f       	add	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	0a 94       	dec	r0
 3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <DIO_vidSetPinval+0xda>
 3b8:	84 2b       	or	r24, r20
 3ba:	8c 93       	st	X, r24
 3bc:	77 c0       	rjmp	.+238    	; 0x4ac <__stack+0x4d>
		}

		else if (u8pinVal == LOW)
 3be:	8b 81       	ldd	r24, Y+3	; 0x03
 3c0:	88 23       	and	r24, r24
 3c2:	09 f0       	breq	.+2      	; 0x3c6 <DIO_vidSetPinval+0xf0>
 3c4:	73 c0       	rjmp	.+230    	; 0x4ac <__stack+0x4d>
		{
			clr_bit(PORTB_Register, u8pinNo);
 3c6:	a8 e3       	ldi	r26, 0x38	; 56
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	e8 e3       	ldi	r30, 0x38	; 56
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	80 81       	ld	r24, Z
 3d0:	48 2f       	mov	r20, r24
 3d2:	8a 81       	ldd	r24, Y+2	; 0x02
 3d4:	28 2f       	mov	r18, r24
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	02 2e       	mov	r0, r18
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <DIO_vidSetPinval+0x10e>
 3e0:	88 0f       	add	r24, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	0a 94       	dec	r0
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <DIO_vidSetPinval+0x10a>
 3e8:	80 95       	com	r24
 3ea:	84 23       	and	r24, r20
 3ec:	8c 93       	st	X, r24
 3ee:	5e c0       	rjmp	.+188    	; 0x4ac <__stack+0x4d>
		}
	}break;

	case PORTC:
	{
		if(u8pinVal == HIGH)
 3f0:	8b 81       	ldd	r24, Y+3	; 0x03
 3f2:	81 30       	cpi	r24, 0x01	; 1
 3f4:	a1 f4       	brne	.+40     	; 0x41e <DIO_vidSetPinval+0x148>
		{
			set_bit(PORTC_Register, u8pinNo);
 3f6:	a5 e3       	ldi	r26, 0x35	; 53
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	e5 e3       	ldi	r30, 0x35	; 53
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	48 2f       	mov	r20, r24
 402:	8a 81       	ldd	r24, Y+2	; 0x02
 404:	28 2f       	mov	r18, r24
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	02 2e       	mov	r0, r18
 40e:	02 c0       	rjmp	.+4      	; 0x414 <DIO_vidSetPinval+0x13e>
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	0a 94       	dec	r0
 416:	e2 f7       	brpl	.-8      	; 0x410 <DIO_vidSetPinval+0x13a>
 418:	84 2b       	or	r24, r20
 41a:	8c 93       	st	X, r24
 41c:	47 c0       	rjmp	.+142    	; 0x4ac <__stack+0x4d>
		}

		else if (u8pinVal == LOW)
 41e:	8b 81       	ldd	r24, Y+3	; 0x03
 420:	88 23       	and	r24, r24
 422:	09 f0       	breq	.+2      	; 0x426 <DIO_vidSetPinval+0x150>
 424:	43 c0       	rjmp	.+134    	; 0x4ac <__stack+0x4d>
		{
			clr_bit(PORTC_Register, u8pinNo);
 426:	a5 e3       	ldi	r26, 0x35	; 53
 428:	b0 e0       	ldi	r27, 0x00	; 0
 42a:	e5 e3       	ldi	r30, 0x35	; 53
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	48 2f       	mov	r20, r24
 432:	8a 81       	ldd	r24, Y+2	; 0x02
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	02 2e       	mov	r0, r18
 43e:	02 c0       	rjmp	.+4      	; 0x444 <DIO_vidSetPinval+0x16e>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	0a 94       	dec	r0
 446:	e2 f7       	brpl	.-8      	; 0x440 <DIO_vidSetPinval+0x16a>
 448:	80 95       	com	r24
 44a:	84 23       	and	r24, r20
 44c:	8c 93       	st	X, r24
 44e:	2e c0       	rjmp	.+92     	; 0x4ac <__stack+0x4d>
		}
	}break;

	case PORTD:
	{
		if(u8pinVal == HIGH)
 450:	8b 81       	ldd	r24, Y+3	; 0x03
 452:	81 30       	cpi	r24, 0x01	; 1
 454:	a1 f4       	brne	.+40     	; 0x47e <__stack+0x1f>
		{
			set_bit(PORTD_Register, u8pinNo);
 456:	a2 e3       	ldi	r26, 0x32	; 50
 458:	b0 e0       	ldi	r27, 0x00	; 0
 45a:	e2 e3       	ldi	r30, 0x32	; 50
 45c:	f0 e0       	ldi	r31, 0x00	; 0
 45e:	80 81       	ld	r24, Z
 460:	48 2f       	mov	r20, r24
 462:	8a 81       	ldd	r24, Y+2	; 0x02
 464:	28 2f       	mov	r18, r24
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	02 2e       	mov	r0, r18
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__stack+0x15>
 470:	88 0f       	add	r24, r24
 472:	99 1f       	adc	r25, r25
 474:	0a 94       	dec	r0
 476:	e2 f7       	brpl	.-8      	; 0x470 <__stack+0x11>
 478:	84 2b       	or	r24, r20
 47a:	8c 93       	st	X, r24
 47c:	17 c0       	rjmp	.+46     	; 0x4ac <__stack+0x4d>
		}

		else if (u8pinVal == LOW)
 47e:	8b 81       	ldd	r24, Y+3	; 0x03
 480:	88 23       	and	r24, r24
 482:	a1 f4       	brne	.+40     	; 0x4ac <__stack+0x4d>
		{
			clr_bit(PORTD_Register, u8pinNo);
 484:	a2 e3       	ldi	r26, 0x32	; 50
 486:	b0 e0       	ldi	r27, 0x00	; 0
 488:	e2 e3       	ldi	r30, 0x32	; 50
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	80 81       	ld	r24, Z
 48e:	48 2f       	mov	r20, r24
 490:	8a 81       	ldd	r24, Y+2	; 0x02
 492:	28 2f       	mov	r18, r24
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	02 2e       	mov	r0, r18
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <__stack+0x43>
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	0a 94       	dec	r0
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <__stack+0x3f>
 4a6:	80 95       	com	r24
 4a8:	84 23       	and	r24, r20
 4aa:	8c 93       	st	X, r24
		}
	}break;
	}
}
 4ac:	0f 90       	pop	r0
 4ae:	0f 90       	pop	r0
 4b0:	0f 90       	pop	r0
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	cf 91       	pop	r28
 4b8:	df 91       	pop	r29
 4ba:	08 95       	ret

000004bc <DIO_vidSetPortVal>:

void DIO_vidSetPortVal(u8 u8PortName,u8 u8PortVal)
{
 4bc:	df 93       	push	r29
 4be:	cf 93       	push	r28
 4c0:	00 d0       	rcall	.+0      	; 0x4c2 <DIO_vidSetPortVal+0x6>
 4c2:	00 d0       	rcall	.+0      	; 0x4c4 <DIO_vidSetPortVal+0x8>
 4c4:	cd b7       	in	r28, 0x3d	; 61
 4c6:	de b7       	in	r29, 0x3e	; 62
 4c8:	89 83       	std	Y+1, r24	; 0x01
 4ca:	6a 83       	std	Y+2, r22	; 0x02
	switch (u8PortName)
 4cc:	89 81       	ldd	r24, Y+1	; 0x01
 4ce:	28 2f       	mov	r18, r24
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	3c 83       	std	Y+4, r19	; 0x04
 4d4:	2b 83       	std	Y+3, r18	; 0x03
 4d6:	8b 81       	ldd	r24, Y+3	; 0x03
 4d8:	9c 81       	ldd	r25, Y+4	; 0x04
 4da:	82 30       	cpi	r24, 0x02	; 2
 4dc:	91 05       	cpc	r25, r1
 4de:	d9 f0       	breq	.+54     	; 0x516 <DIO_vidSetPortVal+0x5a>
 4e0:	2b 81       	ldd	r18, Y+3	; 0x03
 4e2:	3c 81       	ldd	r19, Y+4	; 0x04
 4e4:	23 30       	cpi	r18, 0x03	; 3
 4e6:	31 05       	cpc	r19, r1
 4e8:	34 f4       	brge	.+12     	; 0x4f6 <DIO_vidSetPortVal+0x3a>
 4ea:	8b 81       	ldd	r24, Y+3	; 0x03
 4ec:	9c 81       	ldd	r25, Y+4	; 0x04
 4ee:	81 30       	cpi	r24, 0x01	; 1
 4f0:	91 05       	cpc	r25, r1
 4f2:	61 f0       	breq	.+24     	; 0x50c <DIO_vidSetPortVal+0x50>
 4f4:	1e c0       	rjmp	.+60     	; 0x532 <DIO_vidSetPortVal+0x76>
 4f6:	2b 81       	ldd	r18, Y+3	; 0x03
 4f8:	3c 81       	ldd	r19, Y+4	; 0x04
 4fa:	23 30       	cpi	r18, 0x03	; 3
 4fc:	31 05       	cpc	r19, r1
 4fe:	81 f0       	breq	.+32     	; 0x520 <DIO_vidSetPortVal+0x64>
 500:	8b 81       	ldd	r24, Y+3	; 0x03
 502:	9c 81       	ldd	r25, Y+4	; 0x04
 504:	84 30       	cpi	r24, 0x04	; 4
 506:	91 05       	cpc	r25, r1
 508:	81 f0       	breq	.+32     	; 0x52a <DIO_vidSetPortVal+0x6e>
 50a:	13 c0       	rjmp	.+38     	; 0x532 <DIO_vidSetPortVal+0x76>
	{
	case PORTA :
		{
		PORTA_Register = u8PortVal;
 50c:	eb e3       	ldi	r30, 0x3B	; 59
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	8a 81       	ldd	r24, Y+2	; 0x02
 512:	80 83       	st	Z, r24
 514:	0e c0       	rjmp	.+28     	; 0x532 <DIO_vidSetPortVal+0x76>
		}break;

	case PORTB :
		{
		PORTB_Register = u8PortVal;
 516:	e8 e3       	ldi	r30, 0x38	; 56
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	8a 81       	ldd	r24, Y+2	; 0x02
 51c:	80 83       	st	Z, r24
 51e:	09 c0       	rjmp	.+18     	; 0x532 <DIO_vidSetPortVal+0x76>
		}break;

	case PORTC :
		{
		PORTC_Register = u8PortVal;
 520:	e5 e3       	ldi	r30, 0x35	; 53
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	80 83       	st	Z, r24
 528:	04 c0       	rjmp	.+8      	; 0x532 <DIO_vidSetPortVal+0x76>
		}break;

		case PORTD :
		{
		PORTD_Register = u8PortVal;
 52a:	e2 e3       	ldi	r30, 0x32	; 50
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	8a 81       	ldd	r24, Y+2	; 0x02
 530:	80 83       	st	Z, r24
		}break;
	}
}
 532:	0f 90       	pop	r0
 534:	0f 90       	pop	r0
 536:	0f 90       	pop	r0
 538:	0f 90       	pop	r0
 53a:	cf 91       	pop	r28
 53c:	df 91       	pop	r29
 53e:	08 95       	ret

00000540 <main>:
#include "typed.h"
#include "MCAL/DIO.h"
#include "MCAL/DIO_LOC.h"

void main()
{
 540:	df 93       	push	r29
 542:	cf 93       	push	r28
 544:	cd b7       	in	r28, 0x3d	; 61
 546:	de b7       	in	r29, 0x3e	; 62
	//DIO_vidSetPortDir(PORTD, PORTDIR_INPUT) ;
	//DIO_vidSetPortVal(PORTD, HIGH) ;
}
 548:	cf 91       	pop	r28
 54a:	df 91       	pop	r29
 54c:	08 95       	ret

0000054e <_exit>:
 54e:	f8 94       	cli

00000550 <__stop_program>:
 550:	ff cf       	rjmp	.-2      	; 0x550 <__stop_program>
